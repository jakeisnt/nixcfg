set $mod Mod4

set $left h
set $down j
set $up k
set $right l

set $menu launch

output * bg $bgalt solid_color

### Input configuration
input type:touchpad {
  dwt enabled
  tap enabled # enable tap to click for broken touchpad
  drag enabled
  tap_button_map lrm
  middle_emulation enabled
}

input type:keyboard {
  repeat_delay 250
  repeat_rate 45
}

# Swap `CapsLock` for `Escape` on default laptop keyboards

# Common name for default laptop keyboard
input "1:1:AT_Translated_Set_2_keyboard" {
  xkb_options caps:swapescape
}
# Anne Pro 2 keyboard
input "1241:41618:OBINS_OBINS_AnnePro2" {
  xkb_options caps:swapescape
}
input "1121:16:NOVATEK_USB_Keyboard" {
  xkb_options caps:swapescape
}

# Basic navigation
bindsym $mod+Return exec $term
bindsym $mod+Shift+q kill
bindsym $mod+Space exec $menu
bindsym XF86Search exec $menu
bindsym Print exec 'grimshot save area'
bindsym $mod+Shift+d exec 'lock'
floating_modifier $mod normal

# Exit and reload
bindsym $mod+Shift+e exec 'swaymsg exit'
bindsym $mod+Shift+c reload

# Change window focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# Workspaces
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

# bind monitors to workspaces; ASSUME $mon2 is configured
workspace 10 output $mon2

# Play and pause
bindsym XF86AudioPrev exec 'playerctl previous'
bindsym XF86AudioPlay exec 'playerctl play-pause'
bindsym XF86AudioNext exec 'playerctl next'

# Switch the current container between different layout styles:
bindsym $mod+s layout stacking     # open windows on top of one another
bindsym $mod+w layout tabbed       # open windows "next to" one another
bindsym $mod+e layout toggle split # back to default

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+tab focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent

# Scratchpad
bindsym $mod+Shift+minus move scratchpad
bindsym $mod+minus scratchpad show

# Brightness
bindsym XF86MonBrightnessUp exec "light -A 10"
bindsym XF86MonBrightnessDown exec "light -U 10"

bindsym $mod+r mode "resize"

mode "resize" {
  bindsym $left resize shrink width 10px
  bindsym $down resize grow height 10px
  bindsym $up resize shrink height 10px
  bindsym $right resize grow width 10px

  bindsym Escape mode "default"
}

default_border pixel 2

# class                 border        backgr        text        indicator       child_border
client.focused          $focusedback  $focusedback  $foreground $focusedback    $focusedback
client.focused_inactive $inactiveback $inactiveback $foreground $inactiveback   $inactiveback
client.unfocused        $inactiveback $inactiveback $urgenttext $inactiveback   $inactiveback
client.urgent           $urgent       $urgent       $foreground $urgent         $urgent
client.placeholder      $pholdback    $pholdback    $urgenttext $pholdback      $pholdback

# awesome program bindings
bindsym $mod+u exec "emacsclient -c"
bindsym $mod+i exec "firefox"

# start the sway session so other things can listen for the sway session systemd unit
exec "dbus-update-activation-environment WAYLAND_DISPLAY; systemctl --user import-environment WAYLAND_DISPLAY; systemctl --user start sway-session.target"
