{ config, options, pkgs, lib, stdenv, ... }:


# if you're using tmux again,
# revisit all of the former zsh aliases to find some useful commands
# that might be worth revisiting!

with lib;
with lib.my;
let
  cfg = config.modules.shell.tmux;
  # Despite tmux/tmux#142, tmux will support XDG in 3.2. Sadly, only 3.0 is
  # available on nixpkgs, and 3.1b on master (tmux/tmux@15d7e56), so I
  # implement it myself:
  tmux = (pkgs.writeScriptBin "tmux" ''
    #!${pkgs.stdenv.shell}
    exec ${pkgs.tmux}/bin/tmux -f "$TMUX_HOME/config" "$@"
  '');
in {
  options.modules.shell.tmux = with types; {
    enable = mkBoolOpt false;
    rcFiles = mkOpt (listOf (either str path)) [ ];
  };

  config = mkIf cfg.enable {
    user.packages = [ tmux ];

    modules.theme.onReload.tmux =
      "${tmux}/bin/tmux source-file $XDG_CONFIG_HOME/tmux/extraInit";

    home.configFile = {
      "tmux" = {
        source = "${configDir}/tmux";
        recursive = true;
      };
      "tmux/extraInit".text = ''
        # This file is auto-generated by nixos, don't edit by hand!
        run-shell ${pkgs.tmuxPlugins.copycat}/share/tmux-plugins/copycat/copycat.tmux
        run-shell ${pkgs.tmuxPlugins.prefix-highlight}/share/tmux-plugins/prefix-highlight/prefix_highlight.tmux
        run-shell ${pkgs.tmuxPlugins.yank}/share/tmux-plugins/yank/yank.tmux
        # run-shell ${pkgs.tmuxPlugins.nord}/share/tmux-plugins/nord-tmux/nord.tmux

        ${concatMapStrings (path: ''
          source '${path}'
        '') cfg.rcFiles}
      '';
    };

    env = {
      PATH = [ "$TMUXIFIER/bin" ];
      TMUX_HOME = "$XDG_CONFIG_HOME/tmux";
      TMUXIFIER = "$XDG_DATA_HOME/tmuxifier";
      TMUXIFIER_LAYOUT_PATH = "$XDG_DATA_HOME/tmuxifier";
    };
  };
}
